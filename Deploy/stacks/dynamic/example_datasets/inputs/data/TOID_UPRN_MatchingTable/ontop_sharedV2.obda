[PrefixDeclaration]
building:   http://theworldavatar.io/BuildingWallSurface/
os:		    http://data.ordnancesurvey.co.uk/ontology/spatialrelations/
owl:		http://www.w3.org/2002/07/owl#
rdf:		http://www.w3.org/1999/02/22-rdf-syntax-ns#
xml:		http://www.w3.org/XML/1998/namespace
xsd:		http://www.w3.org/2001/XMLSchema#
obda:		https://w3id.org/obda/vocabulary#
rdfs:		http://www.w3.org/2000/01/rdf-schema#
geo:        http://www.opengis.net/ont/geosparql#

[MappingDeclaration] @collection [[
mappingId       Asset-mapping-UUID-TOID
target      building:{uuid} os:hasUUID {uuid}^^xsd:string ;
                 os:hasTOID {os_topo_toid}^^xsd:string .
source          SELECT substring(cityobject.gmlid from 10) as uuid,
                -- for 'building_' prefix 
                cityobject_genericattrib.strval AS os_topo_toid
                FROM citydb.cityobject
                INNER JOIN citydb.cityobject_genericattrib ON citydb.cityobject.id = citydb.cityobject_genericattrib.cityobject_id
                WHERE cityobject_genericattrib.attrname = 'os_topo_toid'

mappingId       Asset-mapping-UUID-UPRN-via-Standard-Table
target      building:{uuid} os:hasUUID {uuid}^^xsd:string ;
                 os:hasUPRN {uprn}^^xsd:integer .
source          SELECT substring("citydb"."cityobject"."gmlid" from 10) as uuid, "TOID_UPRN_MatchingTable"."IDENTIFIER_1" as uprn
                FROM "citydb"."cityobject", "citydb"."cityobject_genericattrib", "TOID_UPRN_MatchingTable"
                WHERE "citydb"."cityobject_genericattrib"."cityobject_id" = "citydb"."cityobject"."id" 
                AND "citydb"."cityobject_genericattrib"."attrname" = 'os_topo_toid' 
                AND "citydb"."cityobject_genericattrib"."strval" = "TOID_UPRN_MatchingTable"."IDENTIFIER_2";

mappingId       Asset-mapping-UUID-Geometry
target      building:{uuid} os:hasUUID {uuid}^^xsd:string ;
                    geo:hasGeometry "{wkt}"^^geo:wktLiteral .
source          SET search_path TO citydb, public;
                SELECT substring("citydb"."cityobject"."gmlid" from 10) as uuid, 
                st_astext("citydb"."surface_geometry"."geometry") as wkt
                FROM "citydb"."cityobject"
                INNER JOIN "citydb"."surface_geometry" ON "citydb"."surface_geometry"."cityobject_id" = "citydb"."cityobject"."id";
]]